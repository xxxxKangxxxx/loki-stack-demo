services:
  # FastAPI 애플리케이션 (기존)
  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    volumes:
      - ./fastapi-logs:/var/log/fastapi
    restart: unless-stopped
    networks:
      - loki-network

  # 부하 테스트 애플리케이션 (새로 추가)
  load-test-app:
    build:
      context: ./load-test-app
      dockerfile: Dockerfile
    ports:
      - "5050:5000"
    restart: unless-stopped
    networks:
      - loki-network

  # Nginx 리버스 프록시 (기존) - 포트 변경
  nginx:
    image: nginx:1.21-alpine
    ports:
      - "8081:80"  # 8080에서 8081로 변경
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-logs:/var/log/nginx
    command: >
      /bin/sh -c "mkdir -p /var/log/nginx &&
                  touch /var/log/nginx/access.log /var/log/nginx/error.log &&
                  chmod 644 /var/log/nginx/access.log /var/log/nginx/error.log &&
                  nginx -g 'daemon off;'"
    depends_on:
      - fastapi
    restart: unless-stopped
    networks:
      - loki-network

  # Loki - 로그 저장소 (기존)
  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    user: "0:0"  # root 권한으로 실행하여 권한 문제 해결
    restart: unless-stopped
    networks:
      - loki-network

  # Promtail - 로그 수집기 (기존)
  promtail:
    image: grafana/promtail:2.8.2
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - ./fastapi-logs:/var/log/fastapi:ro
      - ./nginx-logs:/var/log/nginx:ro
      - ./promtail-data:/promtail
    command: -config.file=/etc/promtail/config.yml
    user: "0:0"  # root 권한으로 실행하여 권한 문제 해결
    depends_on:
      - loki
      - fastapi
      - nginx
    restart: unless-stopped
    networks:
      - loki-network

  # Prometheus - 메트릭 수집 (새로 추가)
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - loki-network

  # AlertManager (새로 추가)
  alertmanager:
    image: prom/alertmanager:v0.25.0
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - loki-network

  # cAdvisor - 컨테이너 메트릭 (새로 추가)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"  # 그대로 유지 (Nginx 포트를 변경함)
    restart: unless-stopped
    privileged: true
    networks:
      - loki-network

  # Node Exporter - 호스트 메트릭 (새로 추가)
  node-exporter:
    image: prom/node-exporter:v1.6.0
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - loki-network

  # Grafana - 시각화 (기존)
  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - loki
      - prometheus
    restart: unless-stopped
    networks:
      - loki-network

networks:
  loki-network:
    driver: bridge

volumes:
  prometheus-data:
  alertmanager-data: